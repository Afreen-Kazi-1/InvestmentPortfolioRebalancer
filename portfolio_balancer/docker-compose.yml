version: '3.8'

services:
  db:
    image: postgres:13
    environment:
      POSTGRES_DB: portfolio_balancer_db
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d portfolio_balancer_db"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:6.2-alpine
    ports:
      - "6379:6379"

  backend:
    build:
      context: .
      dockerfile: ./deployment/Dockerfile
    command: gunicorn --bind 0.0.0.0:5000 wsgi:app # Assuming Flask/Gunicorn setup
    volumes:
      - ./portfolio_balancer:/app
    ports:
      - "5000:5000"
    environment:
      DATABASE_URL: postgresql://user:password@db:5432/portfolio_balancer_db
      REDIS_URL: redis://redis:6379/0
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started

  celery_worker:
    build:
      context: .
      dockerfile: ./deployment/Dockerfile
    command: celery -A wsgi.celery worker --loglevel=info
    volumes:
      - ./portfolio_balancer:/app
    environment:
      DATABASE_URL: postgresql://user:password@db:5432/portfolio_balancer_db
      REDIS_URL: redis://redis:6379/0
    depends_on:
      redis:
        condition: service_started
      db:
        condition: service_healthy

  celery_beat:
    build:
      context: .
      dockerfile: ./deployment/Dockerfile
    command: celery -A wsgi.celery beat --loglevel=info --scheduler django_celery_beat.schedulers.DatabaseScheduler # Assuming Django Celery Beat for scheduling
    volumes:
      - ./portfolio_balancer:/app
    environment:
      DATABASE_URL: postgresql://user:password@db:5432/portfolio_balancer_db
      REDIS_URL: redis://redis:6379/0
    depends_on:
      redis:
        condition: service_started
      db:
        condition: service_healthy

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    environment:
      REACT_APP_BACKEND_URL: http://localhost:5000 # Adjust if running in production/different host
    depends_on:
      - backend

volumes:
  db_data: